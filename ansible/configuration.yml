---

# Installation
- hosts: slaves
  vars:
    - old_path: "{{ ansible_env.PATH }}"
  tasks:
      - git:
          repo: git@github.com:DavidNemeskey/commoncrawl-downloader2.git
          dest: "{{ github_repo_dir }}"
          key_file: "{{ github_key_file }}"
          accept_hostkey: yes
          version: wiki
      - name: initialize virtualenv with custom Python + upgrade setuptools and pip
        pip: 
            name:
              - setuptools>=40.0.0
              - pip>=19.2.0
            virtualenv: "{{ virtualenv_dir }}"
            # Note: need the full path: https://github.com/ansible/ansible/issues/52275
            virtualenv_command: "{{ path }}/python3 -m venv"
        environment:
            PATH: "{{ path }}:{{ old_path }}"
        when: path is defined
      - name: handle the case when path is undefined
        block:
          - name: initialize virtualenv + upgrade setuptools and pip
            pip: 
                name:
                  - setuptools>=40.0.0
                  - pip>=19.0.0
                virtualenv: "{{ virtualenv_dir }}"
                # No full path: we can only use virtualenv, which is unsafe
                virtualenv_python: python3
          - name: warn the user that using virtualenv is not safe
            fail:
              msg: 'Using virtualenv is not safe w.r.t. updates to the Python version. Specify the path to use the safer venv module.'
            ignore_errors: yes
        when: path is undefined
      - name: install tmuxp
        pip: 
            name:
              - tmuxp
            virtualenv: "{{ virtualenv_dir }}"
      - name: install cc_corpus
        pip:
            name: "{{ github_repo_dir }}"
            virtualenv: "{{ virtualenv_dir }}"
            extra_args: "-e"
  tags:
    - install

# Install emtsv
- hosts: slaves
  tasks:
      - name: install emtsv
        git:
          repo: git@github.com:DavidNemeskey/emtsv.git
          dest: "{{ emtsv_dir }}"
          key_file: "{{ github_key_file }}"
          accept_hostkey: yes
          version: quntoken_v1
      - name: install ctyhon
        pip:
            name:
              - cython
            virtualenv: "{{ virtualenv_dir }}"
      - name: install requirements for the submodules
        pip:
            name:
              - "{{ module }}/requirements.txt"
            virtualenv: "{{ virtualenv_dir }}"
            chdir: "{{ emtsv_dir }}"
            extra_args: "-r"
        loop:
          - emmorphpy
          - hunspellpy
          - purepospy
          - emdeppy
          - HunTag3
          - emudpipe
        loop_control:
          loop_var: module
      - name: download quntoken
        make:
          chdir: "{{ emtsv_dir }}/emtokenpy"
          target: all
  tags:
    - install_emtsv


# Install git lfs on the cluster. Note that this task This is the only task that requires privilege
# elevation. If you need to enter a sudo password, run the comman with -K.
- hosts: slaves
  tasks:
    - name: check whether git-lfs is already installed
      shell: dpkg -l git-lfs | grep ^ii
      register: git_lfs_version
      ignore_errors: yes
    - name: install git-lfs
      block:
      - name: wget the packagecloud script
        get_url:
          url: https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh
          dest: /tmp/ansible.apt.sh
          mode: '0555'
      - name: run the packagecloud script
        shell: "bash /tmp/ansible.apt.sh"
        become: yes
      - name: delete temporary script file
        file:
          path: /tmp/ansible.apt.sh
          state: absent
      - name: install the git lfs package
        apt:
          name: git-lfs
          state: present
        become: yes
      when: git_lfs_version.rc != 0
    - name: install package prerequisites for emtsv (components)
      apt:
        name: libhunspell-dev
        state: present
      become: yes
  tags:
    - emtsv_prereq


# Clean up emtsv
- hosts: slaves
  tasks:
      - name: delete emtsv repo
        file:
          path: "{{ emtsv_dir }}"
          state: absent
        tags:
          - cleanup_emtsv


# Cleanup

- hosts: slaves
  tasks:
      - file:
          path: "{{ virtualenv_dir }}"
          state: absent
        tags:
            - cleanup
      - file:
          path: "{{ github_repo_dir }}"
          state: absent
        tags:
            - cleanup
